
import com.mysql.jdbc.PreparedStatement;
import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.Statement;
import java.util.ArrayList;
import java.util.Vector;
import javax.swing.table.DefaultTableModel;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author aweso
 */
public class Schedule extends javax.swing.JFrame {

    /**
     * Creates new form Schedule
     */
    
    Connection conn;
    
    public Schedule() {
        initComponents();
    }
    
    private Connection Connect(){
        String database = "jdbc:mysql://localhost:3306/enrolment";
        String username = "root";
        String password = "1234";
        
        try{
            Class.forName("com.mysql.jdbc.Driver");
            conn = DriverManager.getConnection(database, username, password);
        }catch(Exception e){
            //
        }
        
        return conn;
    }
    
    private void showNameDegree(){
        conn = Connect();
        String lastName = null;
        String firstName = null;
        String program = null;
        String queryName = "Select LNAME, FNAME, PROGRAM from student where STUDNO = '" + jTextFieldStudentNumber.getText() +"'";
                
        try{
            boolean empty = true;
            Statement st = conn.createStatement();
            ResultSet name = st.executeQuery(queryName);
            
            while(name.next()){
                empty = false;
                lastName = name.getString("LNAME");
                firstName = name.getString("FNAME");
                program = name.getString("PROGRAM");
                
                jTextFieldStudentName.enable();
                jTextFieldProgram.enable();
                jTextFieldStudentName.setText(lastName + ", " + firstName);
                jTextFieldProgram.setText(program);
            }
            
            if(empty){
                jTextFieldStudentNumber.setText("Student Number not found");
            }
        }catch(Exception e){
            
        }
    }
    
    private void showSchedule(){
        conn = Connect();
        String query = "Select * from schedule order by coursecode";
        DefaultTableModel model = (DefaultTableModel) jTableCourseOfferings.getModel();
        
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            
            while(rs.next()){
                String coursecode = rs.getString("COURSECODE");
                String section = rs.getString("SECTION");
                String time = rs.getString("TIME");
                String day = rs.getString("DAY");
                String room = rs.getString("ROOM");
                String professor = rs.getString("PROFESSOR");
                
                model.addRow(new Object[]{coursecode, section, time, day, room, professor});
            }
            
        }catch(Exception e){
            
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jTextFieldStudentName = new javax.swing.JTextField();
        jButtonSearch = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jTextFieldStudentNumber = new javax.swing.JTextField();
        jTextFieldProgram = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        jScrollPane2 = new javax.swing.JScrollPane();
        jTableCourseOfferings = new javax.swing.JTable();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTableChosenClasses = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        jButtonAdd = new javax.swing.JButton();
        jButtonRemove = new javax.swing.JButton();
        jButtonFinalize = new javax.swing.JButton();
        jTextFieldTotalUnits = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Course Enlisment");

        jPanel1.setBorder(javax.swing.BorderFactory.createLineBorder(new java.awt.Color(0, 0, 0)));

        jTextFieldStudentName.setEditable(false);
        jTextFieldStudentName.setEnabled(false);
        jTextFieldStudentName.setFocusable(false);

        jButtonSearch.setText("Search");
        jButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonSearchActionPerformed(evt);
            }
        });

        jLabel3.setText("Student Number:");

        jLabel4.setText("Student Name:");

        jTextFieldProgram.setEditable(false);
        jTextFieldProgram.setEnabled(false);
        jTextFieldProgram.setFocusable(false);

        jLabel5.setText("Degree");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel3))
                .addGap(6, 6, 6)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jTextFieldStudentNumber, javax.swing.GroupLayout.PREFERRED_SIZE, 300, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonSearch))
                    .addComponent(jTextFieldStudentName))
                .addGap(100, 100, 100)
                .addComponent(jLabel5)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jTextFieldProgram, javax.swing.GroupLayout.PREFERRED_SIZE, 97, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel3)
                    .addComponent(jButtonSearch)
                    .addComponent(jTextFieldStudentNumber, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(jTextFieldStudentName, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jTextFieldProgram, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        jTableCourseOfferings.setAutoCreateRowSorter(true);
        jTableCourseOfferings.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Code", "Section", "Time", "Day", "Room", "Professor"
            }
        ));
        jScrollPane2.setViewportView(jTableCourseOfferings);

        jTableChosenClasses.setAutoCreateRowSorter(true);
        jTableChosenClasses.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Course Code", "Section", "Units", "Schedule", "Professor"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane3.setViewportView(jTableChosenClasses);

        jLabel1.setText("Course Offerings:");

        jLabel2.setText("Chosen Classes:");

        jButtonAdd.setText("Add Selected Course");
        jButtonAdd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonAddActionPerformed(evt);
            }
        });

        jButtonRemove.setText("Remove");
        jButtonRemove.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonRemoveActionPerformed(evt);
            }
        });

        jButtonFinalize.setText("Finalize");
        jButtonFinalize.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButtonFinalizeActionPerformed(evt);
            }
        });

        jTextFieldTotalUnits.setEditable(false);
        jTextFieldTotalUnits.setEnabled(false);

        jLabel6.setText("total units:");

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jPanel1, javax.swing.GroupLayout.Alignment.LEADING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jScrollPane2)
                    .addComponent(jScrollPane3)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(0, 0, Short.MAX_VALUE)
                        .addComponent(jButtonAdd))
                    .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel1)
                            .addComponent(jLabel2))
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jTextFieldTotalUnits, javax.swing.GroupLayout.PREFERRED_SIZE, 87, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(jButtonFinalize)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jButtonRemove)))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane2, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jButtonAdd)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel2)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 294, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jButtonRemove)
                    .addComponent(jButtonFinalize)
                    .addComponent(jTextFieldTotalUnits, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void jButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonSearchActionPerformed
        showNameDegree();
        showSchedule();
    }//GEN-LAST:event_jButtonSearchActionPerformed

    private void jButtonAddActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonAddActionPerformed
        addSchedule();
    }//GEN-LAST:event_jButtonAddActionPerformed

    private void jButtonRemoveActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonRemoveActionPerformed
        int row = jTableChosenClasses.getSelectedRow();
        addToFirstTable(row);
        deleteFromSecondTable(row);
        computeTotalUnits();
    }//GEN-LAST:event_jButtonRemoveActionPerformed

    private void jButtonFinalizeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButtonFinalizeActionPerformed
        conn = Connect();
        int rowCount = jTableChosenClasses.getModel().getRowCount();
        
        try{
            for(int i=0; i < rowCount; i++){
                String coursecode = (String) jTableChosenClasses.getModel().getValueAt(i,0);
                String section = (String) jTableChosenClasses.getModel().getValueAt(i, 1);

                String query = "insert into subjectsenrolled (SYTERM, STUDNO, COURSECODE, SECTION)"
                    + "VALUES (?,?,?,?)";

                PreparedStatement ps = (PreparedStatement) conn.prepareStatement(query);
                ps.setString(1, "2016-2017 3");
                ps.setString(2, jTextFieldStudentNumber.getText());
                ps.setString(3, coursecode);
                ps.setString(4, section);
                ps.execute();
            }
            
            conn.close();
            
        }catch(Exception e){
            
        }
        
        
    }//GEN-LAST:event_jButtonFinalizeActionPerformed
    
    private void addSchedule(){
        int row = jTableCourseOfferings.getSelectedRow();
        String coursecode = (String) jTableCourseOfferings.getModel().getValueAt(row, 0);
        String SectionString = (String) jTableCourseOfferings.getModel().getValueAt(row, 1);
        
        String courseCode = null;
        String section = null;
        String timeSched = null;
        String daySched = null;
        String professor = null;
        String units = getUnits();
        
        conn = Connect();
        String querySchedule = "Select coursecode, section, time, day, professor from schedule where coursecode = '" + coursecode + "' and section = '" + SectionString +"'";
        
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(querySchedule);
            
            while(rs.next()){
                courseCode = rs.getString("coursecode");
                section = rs.getString("section");
                timeSched = rs.getString("time");
                daySched = rs.getString("day");
                professor = rs.getString("professor");
            }
            
            st.close(); //optional
            rs.close(); //optional but a good practice
            
        }catch(Exception e){
            System.out.println(e + "\n");
        }
        
        Object[] data = {courseCode, section, units, timeSched + " " + daySched, professor};
        DefaultTableModel model = (DefaultTableModel) jTableChosenClasses.getModel();
        model.addRow(data);
        
        deleteFromFirstTable(row);
        computeTotalUnits();
    }
    
    private void deleteFromFirstTable(int row){
        DefaultTableModel model = (DefaultTableModel) jTableCourseOfferings.getModel();
        model.removeRow(row); //remove the selected frow in the first table
    }
    
    private void deleteFromSecondTable(int row){
        DefaultTableModel model = (DefaultTableModel) jTableChosenClasses.getModel();
        model.removeRow(row);
    }
    
    private void addToFirstTable(int row){
        String coursecode = (String) jTableChosenClasses.getModel().getValueAt(row, 0);
        String SectionString = (String) jTableChosenClasses.getModel().getValueAt(row, 1);
        String courseCode = null;
        String section = null;
        String time = null;
        String day = null;
        String room = null;
        String professor = null;
        
        conn = Connect();
        String query = "Select * from schedule where coursecode = '" + coursecode + "' and section = '" + SectionString +"'";
        
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(query);
            
            while(rs.next()){
                courseCode = rs.getString("coursecode");
                section = rs.getString("section");
                time = rs.getString("time");
                day = rs.getString("day");
                room = rs.getString("room");
                professor = rs.getString("professor");
            }
            
            st.close();
            rs.close();
            
            DefaultTableModel model = (DefaultTableModel) jTableCourseOfferings.getModel();
            model.addRow(new Object[]{courseCode, section, time, day, room, professor});
        }catch(Exception e){
        }
    }
    
    private void computeTotalUnits(){
        int sum = 0;
        int rowCount = jTableChosenClasses.getRowCount();
       
        if(rowCount > 0){
            jTextFieldTotalUnits.enable();
            for(int i=0; i < rowCount; i++){
                sum = sum + Integer.parseInt((String) jTableChosenClasses.getValueAt(i, 2));
            }
        }else if(rowCount == 0){
            jTextFieldTotalUnits.disable();
        }
        
        jTextFieldTotalUnits.setText(sum + "");
    }
    
    private String getUnits(){
        int row = jTableCourseOfferings.getSelectedRow();
        String coursecode = (String) jTableCourseOfferings.getModel().getValueAt(row, 0);
        conn = Connect();
        String queryUnits = "Select units from courses where coursecode = '" + coursecode + "'";
        String units = null;
        
        try{
            Statement st = conn.createStatement();
            ResultSet rs = st.executeQuery(queryUnits);

            while(rs.next()){
                units = rs.getString("units");
            }
            
            st.close();
            rs.close();
            
        }catch(Exception e){
            
        }
        
        return units;
    }
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(Schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(Schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(Schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(Schedule.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new Schedule().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButtonAdd;
    private javax.swing.JButton jButtonFinalize;
    private javax.swing.JButton jButtonRemove;
    private javax.swing.JButton jButtonSearch;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTable jTableChosenClasses;
    private javax.swing.JTable jTableCourseOfferings;
    private javax.swing.JTextField jTextFieldProgram;
    private javax.swing.JTextField jTextFieldStudentName;
    private javax.swing.JTextField jTextFieldStudentNumber;
    private javax.swing.JTextField jTextFieldTotalUnits;
    // End of variables declaration//GEN-END:variables
}
